type User {
  id: Int
  username: String
  email: String
  role: String
}
type Person {
   id:Int
   name: String
   lastName: String
   address: String
   ci: String
   sexo: String
   contactNumber: String
   titulo:String
   user:User
}

input RegisterRequest {
  email: String!
  password: String!
  name: String!
  last_name: String!
  address: String!
  ci: String!
  sexo: String!
  contact_number: String!
  birth_date: String!
  url: String!
  titulo:String!
}


input LoginRequest {
  email: String!
  password: String!
}

type AuthResponse {
  token: String!
}

type Query {
  #requiere token
  listarUsuario: [User]
  findUser(username: String): User
  showDoctor(id:Int):Person
}


type Mutation {
  #publico
  login(request: LoginRequest): AuthResponse
  register(request: RegisterRequest): AuthResponse
  storeDoctor(request:RegisterRequest):String
  deleteDoctor(id:Int):String
  updateDoctor(id:Int,request:RegisterRequest):String
}
